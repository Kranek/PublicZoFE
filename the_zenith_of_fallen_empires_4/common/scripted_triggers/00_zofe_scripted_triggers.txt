######################################
### 	ZoFE Scripted Triggers
###				By Kolyn
######################################

#Mod compatibility, used to replace all instances of is_country_type = default
is_playable_country = {
	any_playable_country = {
		is_same_empire = prev
	}
}

#For rare instances where you need to check for ZoFE Base Mod before game starts.
has_zofe = {
	always = yes
}

#For rare instances where you need to check for ZoFE Sandbox Mode before game starts.
has_zofe_sandbox = {
	always = no
}

#Supports different conditions and triggers for ZoFE vanilla mode which does not perform country type change.
zofe_vanilla = {
	has_global_flag = zofe_vanilla_mode
}

#Supports different conditions and triggers for ZoFE sandbox mode which performs country type change.
zofe_sandbox = {
	has_global_flag = zofe_sandbox_mode
}

#Checks whether ZoFE automated buildings (basically all technologies and buildings related to ZoFE automated economies) are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_1 elsewhere in the code.
automated_industries = {
	has_global_flag = zofe_automated_industries_enabled
}

#Checks whether ZoFE societal buildings (basically all technologies and buildings related to ethics based societal buildings) are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_2 elsewhere in the code.
societal_ascendance = {
	has_global_flag = zofe_societal_ascendance_enabled
}

#Checks whether ZoFE ships (basically all technologies related to Fallen Empire Ships) are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_3 elsewhere in the code.
question_of_style = {
	has_global_flag = zofe_question_of_style_enabled
}

#Checks whether ZoFE technologies (basically all technologies related to weapons and ship components) are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_4 elsewhere in the code.
masters_of_warfare = {
	has_global_flag = zofe_masters_of_warfare_enabled
}

#Checks whether ZoFE edicts and ambitions (basically all technologies related to gaining extra useful ambitions and edicts) are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_5 elsewhere in the code.
ambitions_of_power = {
	has_global_flag = zofe_ambitions_of_power_enabled
}

#Checks whether ZoFE Dark Matter Tier Buildings and Utopian Worlds are allowed for player and ai, with the exception of crises. Also known as fallen_technologies_6 elsewhere in the code.
engineering_perfection = {
	has_global_flag = zofe_engineering_perfection_enabled
}

#Checks whether Galactic Ascendancy AP is required to trigger the ascension situation.
galactic_ascendancy_ap = {
	OR = {
		has_global_flag = galactic_ascendancy_ap_enabled_1
		has_global_flag = galactic_ascendancy_ap_enabled_2
		has_global_flag = galactic_ascendancy_ap_enabled_3
		has_global_flag = galactic_ascendancy_ap_enabled_4
		has_global_flag = galactic_ascendancy_ap_enabled_5
	}
}

#Trigger for other mods if they want to disable ascension for some empires without much overriding.
zofe_ascension_allowed = {
	OR = {
		NOT = { 
			has_country_flag = zofe_ascension_not_allowed
		}
	}
}

#Checks whether it is possible for AI to ascend.
ai_ascension_possible = {
	OR = {
		has_global_flag = ai_ascension_enabled
		has_global_flag = ai_ascension_enabled_1
		has_global_flag = ai_ascension_enabled_2
		has_global_flag = ai_ascension_enabled_3
		has_global_flag = ai_ascension_enabled_4
		has_global_flag = ai_ascension_enabled_5
	}
}

#Checks whether subjects are allowed to ascend.
subject_ascension = {
	has_global_flag = subject_ascension_enabled
}

#Checks whether Ascended Empires can have decadence and become Lost Empires.
ascended_empire_decadence = {
	OR = {
		has_global_flag = ascended_empire_decadence_enabled_1
		has_global_flag = ascended_empire_decadence_enabled_2
		has_global_flag = ascended_empire_decadence_enabled_3
		has_global_flag = ascended_empire_decadence_enabled_4
		has_global_flag = ascended_empire_decadence_enabled_5
	}
}

#Checks whether decadence is disabled
ascended_empire_no_decadence = {
	has_global_flag = ascended_empire_decadence_disabled
}

#Checks whether Original Empire can come back
original_empire_returns = {
	has_global_flag = zofe_return_of_the_original_empire_enabled
}

#Checks whether Ascended Empire Min. Navy Mechanic is enabled.
ascended_empire_min_navy = {
	OR = {
		has_global_flag = ascended_empire_min_navy_enabled_1
		has_global_flag = ascended_empire_min_navy_enabled_2
		has_global_flag = ascended_empire_min_navy_enabled_3
		has_global_flag = ascended_empire_min_navy_enabled_4
		has_global_flag = ascended_empire_min_navy_enabled_5
		has_global_flag = ascended_empire_min_navy_enabled_6
	}
}

#Checks for ZoFE host in multiplayer (the first person that fired the menu event)
is_zofe_host = {
	has_country_flag = zofe_host_country
}

zofe_settings_confirmed = {
	has_global_flag = zofe_settings_confirmed
}



#Checks if there's either an AP crisis with a crisis level of 4 or above or an end-game crisis active in the galaxy.
has_active_crisis = {
	OR = {
		has_crisis = yes
		# has_global_flag = ai_invasion_happened
		# has_global_flag = extradimensional_invasion_happened
		# has_global_flag = prethoryn_invasion_happened
		# has_global_flag = synth_queen_happened
		any_country = {
			OR = {
				has_crisis_level = crisis_level_4
				has_crisis_level = crisis_level_5
				has_crisis_level = crisis_cosmogenesis_level_4
				has_crisis_level = crisis_cosmogenesis_level_5
			}
		}
	}
}

#Checks if EMPIRE1 is equal or higher in all or at least one category compared to EMPIRE2
# is_powerful_empire = {
# 	$EMPIRE1$ = {
# 		OR = {
# 			relative_power = {
# 				who = $EMPIRE2$
# 				category = all
# 				value >= equivalent
# 			}
# 			relative_power = {
# 				who = $EMPIRE2$
# 				category = fleet
# 				value >= equivalent
# 			}
# 			relative_power = {
# 				who = $EMPIRE2$
# 				category = economy
# 				value >= equivalent
# 			}
# 			relative_power = {
# 				who = $EMPIRE2$
# 				category = technology
# 				value >= equivalent
# 			}
# 		}
# 	}
# }

#Is Ascended Empire Trigger supports both ascended_empire country type and default (or any other) country type with the flag.
is_ascended_empire = {
	OR = {
		is_country_type = ascended_empire
		has_country_flag = ascended_empire
		has_country_flag = ascending_empire
	}
}

#Is Lost Empire Trigger supports both lost_empire country type and default (or any other) country type with the flag.
is_lost_empire = {
	OR = {
		is_country_type = lost_empire
		has_country_flag = lost_empire
	}
}

#Like the Is Ascended Empire Trigger, but includes Awakened Fallen Empires.
is_zofe_ae = {
	OR = {
		is_country_type = awakened_fallen_empire
		is_country_type = ascended_empire
		has_country_flag = ascended_empire
	}
}

#Like the Is Lost Empire Trigger, but includes Fallen Empires as well as the Original Empire in its dormant state.
is_zofe_fe = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = lost_empire
		has_country_flag = lost_empire
		is_country_type = original_empire
	}
}

#Refers to the Original Empire, whether in its dormant or awakened state.
is_zofe_oe = {
	OR = {
		is_country_type = original_empire
		is_country_type = awakened_original_empire
	}
}

#Used to refer to all country types added by ZoFE.
is_zofe_country_type = {
	OR = {
		is_country_type = ascended_empire
		is_country_type = lost_empire
		is_country_type = original_empire
		is_country_type = awakened_original_empire
	}
}

#Used to refer to all country types added by ZoFE, as well as those with flags.
is_zofe_country = {
	OR = {
		is_country_type = ascended_empire
		has_country_flag = ascended_empire
		has_country_flag = ascending_empire
		is_country_type = lost_empire
		has_country_flag = lost_empire
		is_country_type = original_empire
		is_country_type = awakened_original_empire
	}
}

is_environmental_architect = {
	OR = {
		has_valid_civic = civic_environmental_architects
		has_valid_civic = civic_environmental_architects_hive
		has_valid_civic = civic_environmental_architects_machine
		has_valid_civic = civic_environmental_architects_megacorp
	}
}

#Technology Scripted Triggers

has_a_fe_tech = {
	OR = {
		has_technology = tech_fallen_class_4_singularity
		has_technology = tech_fallen_dimensional_fabricator
		has_technology = tech_fallen_nourishment_center
		has_technology = tech_fallen_affluence_center
		has_technology = tech_fallen_nano_forge
		has_technology = tech_fallen_sky_dome
		has_technology = tech_fallen_aegis_complex
		has_technology = tech_fallen_mine_dark_matter
		has_technology = tech_synthetic_dark_matter
		has_technology = tech_synthetic_living_metal
		has_technology = tech_synthetic_zro
		has_technology = tech_fallen_lab
		has_technology = tech_fallen_administration
		has_technology = tech_fallen_assembly
		has_technology = tech_fallen_clinic
		has_technology = tech_fallen_market
		has_technology = tech_fallen_security
		has_technology = tech_fallen_silo
		has_technology = tech_fallen_clone_vat
	}
}

has_a_ae_tech = {
	OR = {
		has_technology = tech_fallen_class_5_singularity
		has_technology = tech_fallen_dimensional_harvester
		has_technology = tech_fallen_gourmet_center
		has_technology = tech_fallen_opulent_plaza
		has_technology = tech_fallen_nano_forge_2
		has_technology = tech_fallen_sky_dome_2
		has_technology = tech_fallen_aegis_complex_2
		has_technology = tech_synthetic_dark_matter_2
		has_technology = tech_fallen_mine_dark_matter
		has_technology = tech_synthetic_dark_matter
		has_technology = tech_synthetic_living_metal
		has_technology = tech_synthetic_zro
		has_technology = tech_fallen_lab_2
		has_technology = tech_fallen_administration_2
		has_technology = tech_fallen_assembly_2
		has_technology = tech_fallen_clinic_2
		has_technology = tech_fallen_market_2
		has_technology = tech_fallen_security_2
		has_technology = tech_fallen_silo_2
	}
}

has_all_tech_for_utopian_worlds = {
	NOT = {
		has_tradition = tr_virtuality_adopt
	}
	OR = {
		is_ascended_empire = yes
		is_lost_empire = yes
	}
	NOR = {
		has_technology = tech_paradise_creation
		has_tech_option = tech_paradise_creation
	}
	has_technology = tech_synthetic_living_metal
	has_technology = tech_fallen_class_5_singularity
	has_technology = tech_fallen_dimensional_harvester
	has_technology = tech_fallen_gourmet_center
	has_technology = tech_fallen_nano_forge_2
	has_technology = tech_fallen_lab
	has_technology = tech_fallen_sky_dome
	if = {
		limit = { is_regular_empire = yes }
		has_technology = tech_fallen_market
		has_technology = tech_fallen_opulent_plaza
	}
}

has_all_lost_tech_components = {
	AND = {
		OR = {
			has_technology = tech_psi_missile_system
			has_tech_option = tech_psi_missile_system
		}
		OR = {
			has_technology = tech_shadow_strike_craft
			has_tech_option = tech_shadow_strike_craft
		}
		OR = {
			has_technology = tech_hellfire_autocannons
			has_tech_option = tech_hellfire_autocannons
		}
		OR = {
			has_technology = tech_terror_cannon
			has_tech_option = tech_terror_cannon
		}
		OR = {
			has_technology = tech_dark_energy_disruptor
			has_tech_option = tech_dark_energy_disruptor
		}
		OR = {
			has_technology = tech_titan_missile
			has_tech_option = tech_titan_missile
		}
		OR = {
			has_technology = tech_annihilator_torpedo
			has_tech_option = tech_annihilator_torpedo
		}
		OR = {
			has_technology = tech_dark_energy_torpedo
			has_tech_option = tech_dark_energy_torpedo
		}
		OR = {
			has_technology = tech_titan_point_defence
			has_tech_option = tech_titan_point_defence
		}
		OR = {
			has_technology = tech_dark_energy_flak_battery
			has_tech_option = tech_dark_energy_flak_battery
		}
		OR = {
			has_technology = tech_dark_energy_accelerator
			has_tech_option = tech_dark_energy_accelerator
		}
		OR = {
			has_technology = tech_titan_armor
			has_tech_option = tech_titan_armor
		}
		OR = {
			has_technology = tech_titan_plating
			has_tech_option = tech_titan_plating
		}
		OR = {
			has_technology = tech_dark_energy_shield
			has_tech_option = tech_dark_energy_shield
		}
		OR = {
			has_technology = tech_dark_energy_shield_booster
			has_tech_option = tech_dark_energy_shield_booster
		}
		OR = {
			has_technology = tech_dark_energy_jump_drive
			has_tech_option = tech_dark_energy_jump_drive
		}
		OR = {
			has_technology = tech_dark_energy_thruster
			has_tech_option = tech_dark_energy_thruster
		}
		OR = {
			has_technology = tech_dark_energy_afterburners
			has_tech_option = tech_dark_energy_afterburners
		}
		OR = {
			has_technology = tech_dark_energy_sensors
			has_tech_option = tech_dark_energy_sensors
		}
		OR = {
			has_technology = tech_psi_deflector
			has_tech_option = tech_psi_deflector
		}
		OR = {
			has_technology = tech_infinity_encoder
			has_tech_option = tech_infinity_encoder
		}
		OR = {
			has_technology = tech_infinity_decoder
			has_tech_option = tech_infinity_decoder
		}
		OR = {
			has_technology = tech_dark_energy_power_booster
			has_tech_option = tech_dark_energy_power_booster
		}
		OR = {
			has_technology = tech_dark_energy_power_core
			has_tech_option = tech_dark_energy_power_core
		}
		OR = {
			has_technology = tech_omni_lance
			has_tech_option = tech_omni_lance
		}
		OR = {
			has_technology = tech_omni_emitter
			has_tech_option = tech_omni_emitter
		}
		OR = {
			has_technology = tech_massive_autocannons
			has_tech_option = tech_massive_autocannons
		}
		OR = {
			has_technology = tech_omni_cannon
			has_tech_option = tech_omni_cannon
		}
		OR = {
			has_technology = tech_omni_titan_lance
			has_tech_option = tech_omni_titan_lance
		}
		OR = {
			has_technology = tech_portal_generator
			has_tech_option = tech_portal_generator
		}
		OR = {
			has_technology = tech_dimensional_weapon
			has_tech_option = tech_dimensional_weapon
		}
	}
}

has_a_lost_tech_component = {
	OR = {
		has_technology = tech_psi_missile_system
		has_technology = tech_shadow_strike_craft
		has_technology = tech_hellfire_autocannons
		has_technology = tech_terror_cannon
		has_technology = tech_dark_energy_disruptor
		has_technology = tech_titan_missile
		has_technology = tech_annihilator_torpedo
		has_technology = tech_dark_energy_torpedo
		has_technology = tech_titan_point_defence
		has_technology = tech_dark_energy_flak_battery
		has_technology = tech_dark_energy_accelerator
		has_technology = tech_titan_armor
		has_technology = tech_titan_plating
		has_technology = tech_dark_energy_shield
		has_technology = tech_dark_energy_shield_booster
		has_technology = tech_dark_energy_jump_drive
		has_technology = tech_dark_energy_thruster
		has_technology = tech_dark_energy_afterburners
		has_technology = tech_dark_energy_sensors
		has_technology = tech_psi_deflector
		has_technology = tech_infinity_encoder
		has_technology = tech_infinity_decoder
		has_technology = tech_dark_energy_power_booster
		has_technology = tech_dark_energy_power_core
		has_technology = tech_omni_lance
		has_technology = tech_omni_emitter
		has_technology = tech_massive_autocannons
		has_technology = tech_omni_cannon
		has_technology = tech_omni_titan_lance
		has_technology = tech_portal_generator
		has_technology = tech_dimensional_weapon
	}
}

has_all_lost_tech_buildings = {
		AND = {
			OR = {
				has_technology = tech_fallen_dark_matter_power_plant
				has_tech_option = tech_fallen_dark_matter_power_plant
			}
			OR = {
				has_technology = tech_fallen_autonomous_fabricator
				has_tech_option = tech_fallen_autonomous_fabricator
			}
			OR = {
				has_technology = tech_fallen_agri_processing_complex
				has_tech_option = tech_fallen_agri_processing_complex
			}
			OR = {
				has_technology = tech_fallen_pico_forge
				has_tech_option = tech_fallen_pico_forge
			}
			OR = {
				country_uses_consumer_goods = no
				has_technology = tech_fallen_opulent_tower
				has_tech_option = tech_fallen_opulent_tower
			}
			OR = {
				has_technology = tech_fallen_lab_3
				has_tech_option = tech_fallen_lab_3
			}
			OR = {
				has_technology = tech_fallen_aegis_complex_3
				has_tech_option = tech_fallen_aegis_complex_3
			}
			OR = {
				has_technology = tech_synthetic_dark_matter_3
				has_tech_option = tech_synthetic_dark_matter_3
			}
		}
}

has_a_lost_tech_building = {
	OR = {
		has_technology = tech_fallen_dark_matter_power_plant
		has_technology = tech_fallen_autonomous_fabricator
		has_technology = tech_fallen_agri_processing_complex
		has_technology = tech_fallen_pico_forge
		has_technology = tech_fallen_opulent_tower
		has_technology = tech_fallen_lab_3
		has_technology = tech_fallen_aegis_complex_3
		has_technology = tech_synthetic_dark_matter_3
	}
}


has_all_ae_buildings = {
	AND = {
		has_technology = tech_fallen_class_5_singularity
		has_technology = tech_fallen_dimensional_harvester
		has_technology = tech_fallen_gourmet_center
		has_technology = tech_fallen_opulent_plaza
		has_technology = tech_fallen_nano_forge_2
		has_technology = tech_fallen_sky_dome_2
		has_technology = tech_fallen_aegis_complex_2
		has_technology = tech_fallen_lab_2
		has_technology = tech_fallen_administration_2
		# has_technology = tech_fallen_assembly_2
		# has_technology = tech_fallen_clinic_2
		has_technology = tech_fallen_market_2
		has_technology = tech_fallen_security_2
		has_technology = tech_fallen_silo_2
	}
}

has_a_ae_building = {
	OR = {
		has_technology = tech_fallen_class_5_singularity
		has_technology = tech_fallen_dimensional_harvester
		has_technology = tech_fallen_gourmet_center
		has_technology = tech_fallen_opulent_plaza
		has_technology = tech_fallen_nano_forge_2
		has_technology = tech_fallen_sky_dome_2
		has_technology = tech_fallen_aegis_complex_2
		has_technology = tech_fallen_lab_2
		has_technology = tech_fallen_administration_2
		has_technology = tech_fallen_assembly_2
		has_technology = tech_fallen_clinic_2
		has_technology = tech_fallen_market_2
		has_technology = tech_fallen_security_2
		has_technology = tech_fallen_silo_2
	}
}

is_zofe_utopian_world = {
	OR = {
		is_planet_class = pc_utopian_city
		is_planet_class = pc_utopian_gaia
		is_planet_class = pc_utopian_ringworld
		is_planet_class = pc_utopian_machine
		is_planet_class = pc_utopian_machine_ringworld
		is_planet_class = pc_utopian_hive
		is_planet_class = pc_utopian_hive_ringworld
		is_planet_class = pc_utopian_habitat
	}
}

is_zofe_utopian_gaia = {
	is_planet_class = pc_utopian_gaia
}

is_zofe_utopian_hive = {
	is_planet_class = pc_utopian_hive
}

is_zofe_utopian_machine = {
	is_planet_class = pc_utopian_machine
}

is_zofe_utopian_city = {
	is_planet_class = pc_utopian_city
}

is_basic_utopian_planet = {
	OR = {
		is_planet_class = pc_utopian_gaia
		is_planet_class = pc_utopian_hive
		is_planet_class = pc_utopian_machine
	}
}

is_zofe_utopian_habitat = {
	is_planet_class = pc_utopian_habitat
}

is_zofe_utopian_ringworld = {
	is_planet_class = pc_utopian_ringworld
}

is_zofe_utopian_hive_ringworld = {
	is_planet_class = pc_utopian_hive_ringworld
}

is_zofe_utopian_machine_ringworld = {
	is_planet_class = pc_utopian_machine_ringworld
}

is_zofe_utopian_ring = {
	OR = {
		is_planet_class = pc_utopian_ringworld
		is_planet_class = pc_utopian_machine_ringworld
		is_planet_class = pc_utopian_hive_ringworld
	}
}

can_produce_hedonists = {
	OR = {
		is_planet_class = pc_utopian_city
		is_planet_class = pc_utopian_gaia
		is_planet_class = pc_utopian_ringworld
	}
}

can_produce_maintenance_bot = {
	OR = {
		is_planet_class = pc_utopian_machine
		is_planet_class = pc_utopian_machine_ringworld
	}
}

can_produce_confused_drone = {
	OR = {
		is_planet_class = pc_utopian_hive
		is_planet_class = pc_utopian_hive_ringworld
	}
}

#Checks if the planet can be made into an utopian world
can_make_utopian = {
	OR = {
		is_planet_class = pc_gaia
		is_planet_class = pc_hive
		is_planet_class = pc_machine
		is_planet_class = pc_city
		is_planet_class = pc_ringworld_habitable
		is_planet_class = pc_cybrex
	}
}

is_gaia = {
	is_planet_class = pc_gaia
}

has_stockpile_for_utopian_district = {
	if = {
		limit = {
			OR = {
				is_gaia = yes
				is_planet_class = pc_hive
				is_planet_class = pc_machine
			}
			owner = {
				resource_stockpile_compare = {
					resource = minerals
					value >= 4000
				}
				resource_stockpile_compare = {
					resource = sr_living_metal
					value >= 2000
				}
			}
		}
	}
	else_if = {
		limit = {
			is_planet_class = pc_city
			owner = {
				resource_stockpile_compare = {
					resource = minerals
					value >= 8000
				}
				resource_stockpile_compare = {
					resource = sr_living_metal
					value >= 4000
				}
			}
		}
	}
	else_if = {
		limit = {
			is_ringworld = yes
			owner = {
				resource_stockpile_compare = {
					resource = minerals
					value >= 20000
				}
				resource_stockpile_compare = {
					resource = sr_living_metal
					value >= 10000
				}
			}
		}
	}
}

ascendancy_communications = {
	is_country_type = default
	is_primitive = no
	has_communications = root
}

ascendancy_relations_bad = {
	ascendancy_communications = yes
	their_opinion = {
		who = prev
		value < -99
	}
}

ascendancy_relations_good = {
	ascendancy_communications = yes
	their_opinion = {
		who = prev
		value > 45
	}
}

ascendancy_can_send_small_cache = {
	AND = {
		resource_stockpile_compare = {
			resource = energy
			value >= 1000
		}
		resource_stockpile_compare = {
			resource = minerals
			value >= 2000
		}
		resource_stockpile_compare = {
			resource = alloys
			value >= 500
		}
	}	
}

ascendancy_can_send_medium_cache = {
	AND = {
		resource_stockpile_compare = {
			resource = energy
			value >= 1500
		}
		resource_stockpile_compare = {
			resource = minerals
			value >= 3000
		}
		resource_stockpile_compare = {
			resource = alloys
			value >= 750
		}
	}	
}

ascendancy_can_send_large_cache = {
	AND = {
		resource_stockpile_compare = {
			resource = energy
			value >= 2000
		}
		resource_stockpile_compare = {
			resource = minerals
			value >= 4000
		}
		resource_stockpile_compare = {
			resource = alloys
			value >= 1000
		}
	}	
}

ascendancy_valid_military_target = {
		ascendancy_communications = yes
		has_policy_flag = unrestricted_wars
		fleet_power > 45000
}

ascendancy_sphere_of_influence = {
	OR = {
		has_overlord = root
		is_in_federation_with = root
		AND = {
			is_galactic_community_member = yes
			root = {
				OR = {
					is_galactic_emperor = yes
					is_galactic_custodian = yes
				}
			}
		}
	}
}

ascendancy_neighbors = {
	ascendancy_communications = yes
	is_neighbor_of = root
	NOT = { is_in_federation_with = root }
	is_subject = no
}

ascendancy_has_hyperlane = {
	ascendancy_communications = yes
	NOT = { is_in_federation_with = root }
	any_system_within_border = {
		has_hyperlane_to = root
	}
}

ascendancy_subject_neighbors = {
	ascendancy_communications = yes
	any_neighbor_country = {
		has_overlord = root
	}
	NOR = {
		is_neighbor_of = root
		is_in_federation_with = root
	}
	is_subject = no
}

#Does not contain full list, only those techs that can be potentially researched by cosmo crisis
just_researched_zofe_fe_tech = {
	OR = {
		last_increased_tech = tech_fallen_affluence_center
		last_increased_tech = tech_fallen_opulent_plaza
		last_increased_tech = tech_fallen_nourishment_center
		last_increased_tech = tech_fallen_gourmet_center
		last_increased_tech = tech_fallen_dimensional_fabricator
		last_increased_tech = tech_fallen_dimensional_harvester
		last_increased_tech = tech_fallen_class_4_singularity
		last_increased_tech = tech_fallen_class_5_singularity
		last_increased_tech = tech_fallen_nano_forge
		last_increased_tech = tech_fallen_nano_forge_2
		last_increased_tech = tech_fallen_sky_dome
		last_increased_tech = tech_fallen_sky_dome_2
		last_increased_tech = tech_fallen_aegis_complex
		last_increased_tech = tech_fallen_aegis_complex_2
		last_increased_tech = tech_fallen_administration
		last_increased_tech = tech_fallen_administration_2
		last_increased_tech = tech_fallen_assembly
		last_increased_tech = tech_fallen_assembly_2
		last_increased_tech = tech_fallen_clinic
		last_increased_tech = tech_fallen_clinic_2
		last_increased_tech = tech_fallen_security
		last_increased_tech = tech_fallen_security_2
		last_increased_tech = tech_fallen_market
		last_increased_tech = tech_fallen_market_2
		last_increased_tech = tech_fallen_silo
		last_increased_tech = tech_fallen_silo_2
		last_increased_tech = tech_fallen_lab
		last_increased_tech = tech_fallen_lab_2
		last_increased_tech = tech_synthetic_dark_matter
		last_increased_tech = tech_synthetic_dark_matter_2
		last_increased_tech = tech_synthetic_living_metal
		last_increased_tech = tech_fallen_clone_vat
	}
}

is_rogue_servitor = {
	OR = {
		has_valid_civic = civic_machine_servitor
		has_country_flag = rogue_servitor
	}
}

has_opposing_fanatic_ethics = {
	OR = {
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_pacifist }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_militarist }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_militarist }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_pacifist }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_xenophobe }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_xenophile }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_xenophile }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_xenophobe }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_egalitarian }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_authoritarian }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_authoritarian }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_egalitarian }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_spiritualist }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_materialist }
		}
		AND = {
			$COUNTRY1$ = { has_ethic = ethic_fanatic_materialist }
			$COUNTRY2$ = { has_ethic = ethic_fanatic_spiritualist }
		}
	}
}

# is_valid_target_stop_atrocities = {
# 	OR = {
# 		allows_slavery = yes
# 		allows_purge = yes
# 		allows_preftl_exploitation = yes
# 	}
# 	NOR = { 
# 		has_ethic = ethic_gestalt_consciousness 
# 		has_valid_civic = civic_fanatic_purifiers
# 	}
# }

is_valid_target_demilitarise = {
	fleet_power > 45000
	OR = {
	is_homicidal = no
	has_policy_flag = unrestricted_wars
	}
}

is_valid_target_demilitarise_xenophobe = {
	fleet_power > 45000
}