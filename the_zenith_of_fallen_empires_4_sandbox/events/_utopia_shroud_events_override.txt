
############################
#
# Shroud Events
#
# Written by Henrik Thyrwall
#
############################

# ID 3000 - 3999

namespace = utopia


# The End of the Cycle: Reckoning
country_event = {
	id = utopia.3320
	title = "utopia.3320.name"
	picture = GFX_evt_unspeakable_horror
	show_sound = event_red_alert
	location = root

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = no_end_of_cycle }
	}

	desc = {
		text = "utopia.3320.desc.a"
		trigger = { has_country_flag = exile_world }
	}
	desc = {
		text = "utopia.3320.desc.b"
		trigger = { NOT = { has_country_flag = exile_world } }
	}

	immediate = {
		set_global_flag = end_of_the_cycle_complete
		set_country_flag = end_of_the_cycle_reckoning
		clear_resources = yes
		add_resource = {
			minerals = 1000
			energy = 500
			food = 100
			influence = 100
		}

		if = {
			limit = { NOT = { exists = event_target:shroud_country } }
			create_country = {
				name = "NAME_Creatures_of_the_Shroud"
				type = shroud_spirits
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"black"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				establish_communications_no_message = root
				save_global_event_target_as = shroud_country
			}
		}

		capital_scope = {
			save_event_target_as = former_capital
		}

		every_subject = {
			set_subject_of = {
				who = none
			}
		}
		random_system = {
			limit = {
				NOT = {
					any_country = {
						any_system_within_border = {
							is_same_value = prevprev
						}
					}
				}
				any_system_planet = {
					has_owner = no
					is_colonizable = yes
				}
			}
			random_system_planet = {
				limit = {
					has_owner = no
					is_colonizable = yes
				}
				root = { set_country_flag = exile_world }
				set_planet_flag = exile_planet
				save_event_target_as = exile_world
			}
		}
		random_system = {
			limit = {
				root = { NOT = { has_country_flag = exile_world } }
				any_system_planet = {
					has_owner = no
					is_colonizable = yes
				}
			}
			random_system_planet = {
				limit = {
					has_owner = no
					is_colonizable = yes
				}
				root = { set_country_flag = exile_world }
				save_event_target_as = exile_world
			}
		}
		if = {
			limit = { has_country_flag = exile_world }
			event_target:exile_world = {
				if = {
					limit = {
						is_planet_class = pc_habitat
					}
					create_colony = {
						owner = root
						species = owner_main_species
						ethos = owner
					}
					set_name = "NAME_Exile"
					add_district = district_hab_housing
					add_district = district_hab_science
					add_district = district_hab_mining
					add_district = district_hab_energy
					add_building = building_hab_capital
					add_building = building_foundry_1
					add_building = building_factory_1
					add_building = building_hydroponics_farm
					while = {
						limit = {
							num_pops < 8
							free_housing > 0
						}
						create_pop = {
							species = owner
						}
					}
				}
				else = {
					create_colony = {
						owner = root
						species = owner_main_species
						ethos = owner
					}
					set_name = "NAME_Exile"
					add_district = district_city
					add_district = district_city
					add_district = district_farming
					add_district = district_mining
					add_district = district_generator
					add_building = building_capital
					add_building = building_research_lab_1
					add_building = building_foundry_1
					add_building = building_factory_1
					while = {
						limit = {
							num_pops < 8
							free_housing > 0
						}
						create_pop = {
							species = owner
						}
					}
				}
			}
		}
		kill_leader = {
			show_notification = no
			heir = yes
		}
		kill_leader = {
			show_notification = no
			ruler = yes
		}
		every_owned_leader = {
			kill_leader = { show_notification = no }
		}
		if = {
			limit = { has_country_flag = exile_world }
			create_leader = {
				class = random_ruler
				species = root.owner_species
				name = random
				skill = 5
			}
			assign_leader = last_created_leader
		}
		every_controlled_fleet = {
			destroy_fleet = this
		}
		every_galaxy_planet = {
			limit = { has_modifier = covenant_shroud_marked }
			remove_modifier = covenant_shroud_marked
			remove_all_armies = yes
			every_owned_pop = {
				root = {
					change_variable = {
						which = "end_power"
						value = 1
					}
				}
			}

			if = {
				limit = {
					has_owner = yes
					owner = { NOT = { has_country_flag = end_of_the_cycle_reckoning } }
				}
				owner = {
					set_country_flag = end_of_the_cycle_reckoning
					set_country_flag = end_of_cycle_lost_planets
					country_event = { id = utopia.3321 }
				}
			}

			if = {
				limit = {
					NOT = { is_same_value = event_target:former_capital }
				}
				create_fleet = {
					name = "NAME_Shroud_Manifestation"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:shroud_country
						create_ship = {
							name = "NAME_Fragment"
							design = "NAME_Shroud_Manifestation"
						}
						set_location = prev
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 3000
					}
				}
			}

			if = {
				limit = {
					is_planet_class = pc_habitat
				}
				destroy_colony = yes
				remove_planet = yes
			}
			else_if = {
				limit = {
					is_ringworld = yes
				}
				change_pc = pc_ringworld_habitable_damaged
				clear_planet_modifiers = yes
				clear_deposits = yes
			}
			else = {
				change_pc = pc_shrouded
				clear_planet_modifiers = yes
				clear_deposits = yes
			}
		}

		every_country = {
			limit = {
				NOT = { is_same_value = root }
				is_playable_country = yes
			}
			add_opinion_modifier = {
				modifier = opinion_doomed_us_all
				who = root
			}
			if = {
				limit = {
					NOT = { has_country_flag = end_of_the_cycle_reckoning }
				}
				set_country_flag = end_of_the_cycle_reckoning
				country_event = { id = utopia.3321 }
			}
		}

		create_fleet = {
			name = "NAME_The_End"
			settings = {
				spawn_debris = no
				ai_ignore_strength = yes
				is_boss = yes
			}
			effect = {
				save_global_event_target_as = the_end_of_the_cycle
				set_name = {
					key = "NAME_Absorbed_Species"
					variable_string = "[Root.GetSpeciesNamePlural]"
				}
				set_owner = event_target:shroud_country
				create_ship = {
					name = "NAME_Reckoning"
					design = "NAME_Warped_Consciousness"
				}
				set_location = event_target:former_capital
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 3000
				if = {
					limit = {
						root = {
							check_variable = {
								which = "end_power"
								value < 500
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_1"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = {
							check_variable = {
								which = "end_power"
								value < 1000
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_2"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = {
							check_variable = {
								which = "end_power"
								value < 2500
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_3"
						days = -1
					}
				}
				else_if = {
					limit = {
						root = {
							check_variable = {
								which = "end_power"
								value < 5000
							}
						}
					}
					add_modifier = {
						modifier = "absorbed_consciousness_4"
						days = -1
					}
				}
				else = {
					add_modifier = {
						modifier = "absorbed_consciousness_5"
						days = -1
					}
				}
			}
		}
	}

	option = {
		name = "utopia.3320.opt.a"
	}
}

# Chosen One becomes ruler
country_event = {
	id = utopia.3400
	title = "utopia.3400.name"
	desc = "utopia.3400.desc"
	picture = GFX_evt_psionics
	show_sound = event_mystic_reveal

	trigger = {
		is_playable_country = yes
		NOT = { has_country_flag = chosen_one_ruler_event }
		OR = {
			# Either you've not Imperial and have a Chosen One
			AND = {
				OR = {
					is_democratic_authority = yes
					is_oligarchic_authority = yes
					is_dictatorial_authority = yes
					# MegaCorps deliberately excluded.
				}
				any_owned_leader = {
					has_chosen_one_leader_trait = yes
				}
			}
			# Or you're Imperial and the Chosen One is your current ruler or heir.
			AND = {
				is_imperial_authority = yes
				any_owned_leader = {
					has_chosen_one_leader_trait = yes
					has_trait = trait_imperial_heir
				}
			}
		}
	}

	mean_time_to_happen = {
		months = 120
	}

	immediate = {
		set_country_flag = chosen_one_ruler_event
		if = {
			limit = {
				OR = {
					is_democratic_authority = yes
					is_oligarchic_authority = yes
					is_dictatorial_authority = yes
					# MegaCorps deliberately excluded.
				}
			}
			random_owned_leader = {
				limit = {
					has_chosen_one_leader_trait = yes
				}
				save_event_target_as = chosen_one
				species = { save_event_target_as = chosen_one_species }
			}
		}
		else = {
			random_owned_leader = {
				limit = {
					has_chosen_one_leader_trait = yes
					has_trait = trait_imperial_heir
				}
				save_event_target_as = chosen_one
				species = { save_event_target_as = chosen_one_species }
			}
		}
	}

	option = {
		name = "utopia.3400.a"
		ai_chance = {
			factor = 100
			modifier = {
				factor = 40
				has_ethic = ethic_egalitarian
			}
				modifier = {
				factor = 80
				has_ethic = ethic_fanatic_egalitarian
			}
		}
		custom_tooltip = reject_god_emperor
	}
	option = {
		name = "utopia.3400.b"
		ai_chance = {
			factor = 150
			modifier = {
				factor = 40
				has_ethic = ethic_authoritarian
			}
				modifier = {
				factor = 80
				has_ethic = ethic_fanatic_authoritarian
			}
		}
		if = {
			limit = {
				has_origin = origin_legendary_leader_dictatorial
			}
			set_origin = origin_legendary_leader_imperial
		}
		shift_ethic = "ethic_fanatic_authoritarian"
		shift_ethic = "ethic_spiritualist"
		change_government = {
			authority = auth_imperial
			cooldown = no
			remove_invalid_civics = yes
		}
		force_add_civic = civic_psionic_sovereign
		set_government_cooldown = no
		# The ruler doesn't need to abdicate if they're being crowned.
		if = {
			limit = {
				ruler = {
					NOT = {
						is_same_value = event_target:chosen_one
					}
				}
			}
			ruler = {
				exile_leader_as = destituted_ruler_chosen_one
			}
			set_leader = event_target:chosen_one
		}
		hidden_effect = {
			every_country = {
				limit = {
					is_ai = no
					NOT = { is_same_value = root }
					has_communications = root
				}
				country_event = { id = utopia.3401 days = 4 }
			}
			country_event = { id = utopia.3402 days = 5 }
		}
	}
}