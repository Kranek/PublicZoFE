###########################
# Utopia On-Action Events #
###########################

namespace = utopia

# The Synthetic Age
country_event = {
	id = utopia.2551
	title = "utopia.2551.name"
	desc = "utopia.2551.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution

	is_triggered_only = yes

	immediate = {
		set_country_flag = synthetic_empire
		if = {
			limit = {
				OR = {
					has_origin = origin_legendary_leader_dictatorial
					AND = {
						has_country_flag = paragon_origin_reformists_gone
						has_origin = origin_legendary_leader_imperial
					}
				}
				NOT = { has_country_flag = luminary_ascension_path }
				exists = ruler
				ruler = { has_leader_flag = paragon_origin_legendary_leader }
			}
			country_event = {
				id = paragon.5201 days = 3600 random = 7200
			}
		}
		if = {
			limit = {
				has_policy_flag = robots_outlawed
			}
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_policy_flag = ai_servitude
					has_policy_flag = ai_outlawed
				}
			}
			set_policy = {
				policy = artificial_intelligence_policy
				option = ai_full_rights
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					is_active_resolution = "resolution_divinity_silence_the_soulless"
					is_active_resolution = "resolution_divinity_a_defined_purpose"
				}
			}
			owner = {
				set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
			}
		}
		give_technology = { tech = tech_bio_reactor message = no }

		create_synth_species_effect = yes

		every_owned_pop = {
			limit = {
				is_being_purged = no
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:synthspecies@root.owner
		}

		every_controlled_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:synthspecies@root.owner
		}

		every_owned_army = {
			limit = {
				exists = species
				#exists = planet
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = assault_army
			}
			modify_army = {
				name = random
				type = "robotic_army"
				species = event_target:synthspecies@root.owner
			}
		}

		every_owned_army = {
			limit = {
				exists = species
				exists = planet
				species = {
					is_robotic = no
					is_livestock = no
				}
				army_type = defense_army
			}
			modify_army = {
				name = random
				type = "robotic_defense_army"
				species = event_target:synthspecies@root.owner
			}
		}

		every_owned_leader = {
			limit = {
				OR = {
					species = {
						is_robotic = no
						is_livestock = no
					}
					has_trait = leader_trait_synthetic
				}
				NOR = {
					has_leader_flag = renowned_leader
					has_leader_flag = legendary_leader
				}
			}
			change_species = event_target:synthspecies@root.owner
			change_leader_portrait = species
		}
		every_pool_leader = {
			limit = {
				OR = {
					species = {
						is_robotic = no
						is_livestock = no
					}
					has_trait = leader_trait_synthetic
				}
			}
			change_species = event_target:synthspecies@root.owner
			change_leader_portrait = species
		}
		change_dominant_species = { species = event_target:synthspecies@root.owner }

		every_owned_leader = {
			limit = {
				species = { has_trait = trait_mechanical }
				NOR = {
					has_trait = leader_trait_synthetic
					has_leader_flag = renowned_leader
					has_leader_flag = legendary_leader
				}
			}
			add_trait_no_notify = leader_trait_synthetic
			remove_trait = leader_trait_cyborg
		}

		create_message = {
			type = MESSAGE_ALL_GAINED_TRAIT
			localization = MESSAGE_ALL_GAINED_TRAIT_DESC
			days = @toast_message_days
			variable = {
				type = key
				value = leader_trait_synthetic
				localization = TRAIT
			}
			variable = {
				key = TRAIT_KEY
				value = leader_trait_synthetic
			}
			variable = {
				key = "border"
				value = "GFX_invisible"
			}
		}

		every_envoy = {
			limit = {
				species = {
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:synthspecies@root.owner
			change_leader_portrait = species
		}
		every_pool_leader = {
			limit = {
				species = { has_trait = trait_mechanical }
				NOT = { has_trait = leader_trait_synthetic }
			}
			add_trait_no_notify = leader_trait_synthetic
			remove_trait = leader_trait_cyborg
		}

		observer_event = { id = observer.4 }
		every_country = {
			limit = {
				is_ai = no
				NOT = { is_same_value = root }
				has_communications = root
			}
			country_event = { id = utopia.2555 days = 5 }
			country_event = { id = utopia.2556 days = 10 }
		}
		if = {
			limit = {
				any_country = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
			}
			random_country = {
				limit = {
					OR = {
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}
		else = {
			random_country = {
				limit = {
					is_playable_country = yes
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2557 days = 15 }
			}
		}
		if = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = {
						has_country_flag = fotd_seperatist_country@root
					}
				}
			}
			country_event = { id = origin.6100 days = 5 random = 2 }
		}
	}

	option = {
		trigger = {
			is_homicidal = no
		}
		name = "utopia.2551.a"
	}

	option = {
		trigger = {
			is_homicidal = yes
		}
		name = "utopia.2551.a"
	}
}

# Transcendence
country_event = {
	id = utopia.2650
	title = "utopia.2650.name"
	desc = "utopia.2650.desc"
	picture = GFX_evt_psionics
	show_sound = event_the_great_awakening

	is_triggered_only = yes

	trigger = {
		has_tradition = tr_psionics_psionic_assimilation
	}

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = root
				has_trait = trait_latent_psionic
			}
			modify_species = {
				species = this
				remove_trait = trait_latent_psionic
				add_trait = trait_psionic
				effect = {
					save_event_target_as = psionic_species
				}
			}
		}
		change_dominant_species = { species = event_target:psionic_species change_all = yes }
	}
	option = {
		name = "utopia.2650.a"
		hidden_effect = {
			every_country = {
				limit = {
					OR = {
						is_playable_country = yes
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				every_owned_leader = {
					limit = {
						species = {
							has_trait = trait_psionic
							is_same_value = event_target:psionic_species
						}
						NOR = {
							has_trait = leader_trait_psionic
							has_leader_flag = renowned_leader
							has_leader_flag = legendary_leader
						}
					}
					add_trait_no_notify = leader_trait_psionic
					owner = {
						if = {
							limit = {
								NOT = {
									has_country_flag = psionic_leader_toast
								}
							}
							set_timed_country_flag = {
								flag = psionic_leader_toast
								days = 30
							}
						}
					}
				}

				every_pool_leader = {
					limit = {
						species = {
							has_trait = trait_psionic
							is_same_value = event_target:psionic_species
						}
						NOT = { has_trait = leader_trait_psionic }
					}
					add_trait_no_notify = leader_trait_psionic
					owner = {
						if = {
							limit = {
								NOT = {
									has_country_flag = psionic_leader_toast
								}
							}
							set_timed_country_flag = {
								flag = psionic_leader_toast
								days = 30
							}
						}
					}
				}

				if = {
					limit = {
						has_country_flag = psionic_leader_toast
					}
					create_message = {
						type = MESSAGE_ALL_GAINED_TRAIT
						localization = MESSAGE_ALL_GAINED_TRAIT_DESC
						days = @toast_message_days
						variable = {
							type = key
							value = leader_trait_psionic
							localization = TRAIT
						}
						variable = {
							key = TRAIT_KEY
							value = leader_trait_psionic
						}
						variable = {
							key = "border"
							value = "GFX_invisible"
						}
					}
				}
			}
			observer_event = { id = observer.6 }
			every_country = {
				limit = {
					is_ai = no
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = { id = utopia.2652 }
			}
		}
	}
}